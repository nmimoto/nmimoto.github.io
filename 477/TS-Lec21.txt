###
###
###  AutoRegressive Model - R code only
###
###
####################################



## 1. AR(1) model

### Stationarity Condition for AR(1)

  #- Simulate AR1 with phi > 1
  Y   <- 0.5                     # initial value of Y
  phi <- 1.1              # <--- greater than 1
  e <- rnorm(100, 0, 1)        # generate 100 N(0,1) error 
  for (t in 2:100){
    Y[t] = Y[t-1]*phi + e[t]   # compute AR(1) sequence
  }
  plot(Y, type="o")


  #- Simulate AR1 with phi<1
  Y   <- 0.5
  phi <- 0.8            # <--- absolute value less than 1
  e <- rnorm(100, 0, 1)        # generate 100 N(0,1) error 
  for (t in 2:100){
    Y[t] = Y[t-1]*phi + e[t]   # compute AR(1) sequence
  }
  plot(Y, type="o")


  #- Simulate AR1 with |phi|<1
  Y <- 0.5
  phi <- -0.8           # <--- absolute value less than 1
  e <- rnorm(100, 0, 1)        # generate 100 N(0,1) error 
  for (t in 2:100){
    Y[t] = Y[t-1]*phi + e[t]   # compute AR(1) sequence
  }
  plot(Y, type="o")



### AR(1) is Random Walk if $\phi=1$

  #- Simulate AR1 with phi=1
  Y <- 0.5
  phi <- 1
  e <- rnorm(100, 0, 1)        # generate 100 N(0,1) error 
  for (t in 2:100){
    Y[t] = Y[t-1]*phi + e[t]   # compute AR(1) sequence
  }
  plot(Y, type="o")


  #- Simulate 50 AR1 with phi=1
  phi <- 1
  for (i in 1:50) { 
    Y <- 1
    e <- rnorm(100, 0, 1)        # generate 100 N(0,1) error
    for (t in 2:100){
      Y[t] = Y[t-1]*phi + e[t]   # compute AR(1) sequence
    }
    plot(Y, type="l", ylim=c(-30,30))
    par(new=TRUE)              # overlay all the plot that comes after 
  }





## 3. Theoretical ACVF and ACF of AR(1) in R

  #  install.packages("ltsa")        #- if not installed before
  
  library(ltsa)                      # load the package ltsa
  Th.ACVF  <- tacvfARMA(phi = c(.8), theta= c(0), maxLag=20, sigma2=1)   # get Theoretical ACVF
  Th.ACVF                            # see what's inside
  Th.ACF   <- Th.ACVF / Th.ACVF[1]   # get Theo. ACF 
  Th.ACF

  layout( matrix(1:2, 1,2) )             # two plots side by side 
  plot(0:20, Th.ACVF, type="h", col="red")  
  abline(h=0)                            # add horizontal line at 0 
  plot(0:20, Th.ACF,  type="h", col="red")
  abline(h=0)                            

  #-  Another function for Theoretical ACF  (ACF only, you don't need ltsa package)
  Th.ACF2  <- ARMAacf(ar=c(.8), ma=c(0), lag.max=20, pacf=FALSE )  
  Th.ACF2 





## 4. Simulating of AR(1)


  Y <- arima.sim(list(ar = c(.8 ) ), 100 )         # Simulate AR(1) with phi=.8
  plot(Y, type="o")
  
  Th.ACVF1  <- tacvfARMA(phi = c(.8), maxLag=20)   # need library(ltsa)   
  Th.ACF1   <- Th.ACVF1 / Th.ACVF1[1]              # get Theoretical ACF 

  acf(Y)                                         #- plot sample ACF    
  lines(0:20, Th.ACF1, type="p", col="red")      #- overlay theoretical ACF as red circle





















        
