###
###  Methane-CO2 fit demo - 2/13/2020
###
###############################################

 
#--- Load Dataset
  D <- read.csv("https://nmimoto.github.io/datasets/methane.csv", header=T)
  CO2 <- ts(D[,2], start=c(1, 1), freq=1)
  Met <- ts(D[,3], start=c(1, 1), freq=1)
  plot(Met, type='o')

  plot(CO2, type='o')

  # looks stationary, fit with AR(p)


#--- Plot ACF/PACF
acf(CO2)
pacf(CO2)

  # acf tails off, pacf cuts off.  Looks good. 

library(forecast)

  #auto.arima(CO2)  # suggests something w d=1. Not using. 


#---------------------------------------
# Fit AR

auto.arima(CO2, d=0, max.q=0)   # look only AR(p)

  # AR(4) with mean suggested.  3rd phi not sig. 

Fit01 = Arima(CO2, order=c(4,0,0))
Fit01   # same as auto.arima 

Fit02 = Arima(CO2, order=c(3,0,0))
Fit02   # AIC much worse. Fit01 looks better.


Fit03 = Arima(CO2, order=c(5,0,0))
Fit03   # 5th phi not sig.  Fit01 looks better. 

#--- Resid analysis
source("https://nmimoto.github.io/R/TS-00.txt")
plot(Fit01$residuals)

Randomness.tests(Fit01$residuals)

  # L-B looks good, but not M-L.  May need ARCH/GARCH model 



#---------------------------------------
#--- Rolling 1-period forecast with AR(4)

  Y <- CO2                 # Entire data
  window.size <- 200       # Window size for estimation
  order.in <- c(4,0,0)     # model order


    Yhat  <- Yhat.CIu <- Yhat.CIl <- 0        # initialize what needs to be saved
    for (i in 1:(length(Y)-window.size)) {
      # Force to fit AR(2) each time on last 100 obs.
      Fit00 <- Arima( Y[i:(i+window.size-1)], order=order.in)     # <--- AR(2)
  
      Y.h  <- predict(Fit00, n.ahead=1)       # one step prediction
      Yhat[i]     <- Y.h$pred
      Yhat.CIu[i] <- Yhat[i]+1.96*Y.h$se
      Yhat.CIl[i] <- Yhat[i]-1.96*Y.h$se
    }
  # Yhat starts at window.size+1 up to length(Y)
  Yhat     = ts(Yhat, start=time(Y)[window.size+1], freq=1)
  Yhat.CIu = ts(Yhat, start=time(Y)[window.size+1], freq=1)
  Yhat.CIl = ts(Yhat, start=time(Y)[window.size+1], freq=1)
  Y1 = window(Y, start=time(Y)[1], end=time(Y)[window.size])

  #- Calculate prediction performance
  Pred.error = Y[(window.size+1):length(Y)] - Yhat
  Pred.rMSE =  sqrt(  mean( (Pred.error)^2 ) )     # prediction root Mean Squared Error
  c( mean(Pred.error), Pred.rMSE )                 # Av Pred Error, and pred rMSE
  

  #- Plot the prediction result with original data 
  plot(Y, type="o", col="red",
    main="Rolling 1-step prediction (Red=Actual, Blue=Prediction)" )  
  lines( Y1,       type="o")
  lines( Yhat,     type="o", col="blue")
  lines( Yhat.CIu, type="l", col="gray30", lty=2)
  lines( Yhat.CIl, type="l", col="gray30", lty=2)




  # - Plot the prediction error
  layout(matrix(1:2, 1, 2))    # two plots side by side
  plot( (window.size+1):length(Y), Pred.error, type="o", main="Prediction Error (Red-Blue)" ) 
  abline(h=c(-1.96, 1.96), col="blue", lty=2)
  acf(Pred.error)
  layout(1)                    # reset the layout

 
#---------------------------------------
#--- 10-period forecast with AR(4)
  plot(forecast(Fit01))


