###
###
###  Finite Sample Property of MLE - R code only
###
###
####################################


# 2. Simulation Study of MLE

## a. 1-time simulation and MLE for n=100
 
  mu <- 5
  X  <- arima.sim(n = 100, list(ar = c(0.7), ma = c(0.4)) ) + mu
  plot(X, type="o")

  Fit1 <- arima(X, order=c(1,0,1))
  Fit1

  str(Fit1)          # see what's inside
  Fit1$coef          # parameter estimates (MLE)
  Fit1$var.coef      # variance of MLE using asymptotic formula

  c(Fit1$var.coef[1,1], Fit1$var.coef[2,2], Fit1$var.coef[3,3])



## b. Put above in a loop of 500. 

  #-Repeat above for 1000 times, recording Est$coef each time.
  #       Compare the simulated variance and theoretical asympt variance ---

  n=100
  itt=500

  MLE  <- matrix(0,itt,7)  #matrix to record estimated values
  Vars <- matrix(0,itt,7)  #matrix to record estimated values

  set.seed(1373)
  for (i in 1:itt) {
    mu <- 5
    # X  <- arima.sim(n = n,  list(ar = c(0.7), ma = c(0.4))  ) + mu                    # Case 1
    X  <- arima.sim(n = n, list(ar = c(0.7, .2, -.3), ma = c(0.6, -.4, .2))  ) + mu    # Case 2

    Est      <- arima(X, order=c(3,0,3))
    MLE[i,]  <- Est$coef
    Vars[i,] <- diag(Est$var.coef)
  }

  #--- Result for phi1, theta1, mu ----
  layout(matrix(1:6, 2,3, byrow=TRUE)); 
  hist(MLE[,1], main="phi1 (.7)");     abline(v= .7, col="blue")
  hist(MLE[,2], main="phi2 (.2)");     abline(v= .2, col="blue")
  hist(MLE[,3], main="phi3 (.3)");     abline(v=-.3, col="blue")
  hist(MLE[,4], main="theta1 (.6)");   abline(v= .6, col="blue")
  hist(MLE[,5], main="theta2 (.4)");   abline(v=-.4, col="blue")
  hist(MLE[,6], main="theta3 (.2)");   abline(v= .2, col="blue")
  
  Result <- cbind( apply(MLE, 2, mean), apply(MLE, 2, sd), sqrt(apply(Vars, 2, mean)) )
  colnames(Result) <- c("Mean","SE by Sim",  "SE from Output")
  Result




### Increase n to 400

  #-Repeat above for 1000 times, recording Est$coef each time.
  #       Compare the simulated variance and theoretical asympt variance ---

  n=400
  itt=500

  MLE  <- matrix(0,itt,7)  #matrix to record estimated values
  Vars <- matrix(0,itt,7)  #matrix to record estimated values

  set.seed(373)
  for (i in 1:itt) {
    mu <- 5
    # X  <- arima.sim(n = n,  list(ar = c(0.7), ma = c(0.4))  ) + mu                    # Case 1
    X  <- arima.sim(n = n, list(ar = c(0.7, .2, -.3), ma = c(0.6, -.4, .2))  ) + mu    # Case 2

    Est      <- arima(X, order=c(3,0,3))
    MLE[i,]  <- Est$coef
    Vars[i,] <- diag(Est$var.coef)
  }

  #--- Result for phi1, theta1, mu ----
  layout(matrix(1:6, 2,3, byrow=TRUE)); 
  hist(MLE[,1], main="phi1 (.7)");     abline(v= .7, col="blue")
  hist(MLE[,2], main="phi2 (.2)");     abline(v= .2, col="blue")
  hist(MLE[,3], main="phi3 (.3)");     abline(v=-.3, col="blue")
  hist(MLE[,4], main="theta1 (.6)");   abline(v= .6, col="blue")
  hist(MLE[,5], main="theta2 (.4)");   abline(v=-.4, col="blue")
  hist(MLE[,6], main="theta3 (.2)");   abline(v= .2, col="blue")
  
  Result2 <- cbind( apply(MLE, 2, mean), apply(MLE, 2, sd), sqrt(apply(Vars, 2, mean)) )
  colnames(Result) <- c("Mean","SE by Sim",  "SE from Output")
  Result2


  #- when n=100 
  Result 









## c. When errors are not Normal
 

  n=100
  MLE  <- Vars  <- matrix(0,1000,3)  #matrix to record estimated values
  MLE2 <- Vars2 <- matrix(0,1000,3)  #matrix to record estimated values
  MLE3 <- Vars3 <- matrix(0,1000,3)  #matrix to record estimated values

  for (i in 1:1000) {

    #-- Normal errors ---
    X   <- arima.sim(n = n, list(ar = c(0.7), ma = c(0.4))  ) + mu

    Est      <- arima(X, order=c(1,0,1))
    MLE[i,]  <- Est$coef
    Vars[i,] <- c(Est$var.coef[1,1], Est$var.coef[2,2], Est$var.coef[3,3])

    #-- non-normal errors ---
    et <- rt(n, 4)                          # t-distribution with df=4.
    Y  <- arima.sim(n=n, list(ar = c(0.7), ma = c(0.4)), innov=et  ) + mu

    Est2 <- arima(Y, order=c(1,0,1))
    MLE2[i,]  <- Est2$coef
    Vars2[i,] <- c(Est2$var.coef[1,1], Est2$var.coef[2,2], Est2$var.coef[3,3])


    #-- non-normal errors ---
    et3 <- rexp(n, 1)-1                          # exp with mean 0
    T  <- arima.sim(n=n, list(ar = c(0.7), ma = c(0.4)), innov=et3  ) + mu

    Est3 <- arima(T, order=c(1,0,1))
    MLE3[i,]  <- Est3$coef
    Vars3[i,] <- c(Est3$var.coef[1,1], Est3$var.coef[2,2], Est3$var.coef[3,3])

  }

  # Plotting Results 
  
  layout(matrix(1:6, 3,2, byrow=TRUE)); 
  hist(MLE[,1],  xlim=c(0,1), main="e ~ Norm: phi1 (.7)"  );  abline(v= .7, col="blue") 
  hist(MLE[,2],  xlim=c(0,1), main="e ~ Norm: theta1 (.4)");  abline(v= .4, col="blue") 
  hist(MLE2[,1], xlim=c(0,1), main="e ~ t(v): phi1 (.7)"  );  abline(v= .7, col="blue")
  hist(MLE2[,2], xlim=c(0,1), main="e ~ t(v): theta1 (.4)");  abline(v= .4, col="blue") 
  hist(MLE3[,1], xlim=c(0,1), main="e ~ exp(1)-1: phi1 (.7)"  );  abline(v= .7, col="blue")
  hist(MLE3[,2], xlim=c(0,1), main="e ~ exp(1)-1: theta1 (.4)");  abline(v= .4, col="blue") 

  Result3 <- rbind(c(mean(MLE[,1]),   sd(MLE[,1]),  mean(MLE[,2]),   sd(MLE[,2] ) ),
                   c(mean(MLE2[,1]),  sd(MLE2[,1]), mean(MLE2[,2]),  sd(MLE2[,2]) ), 
                   c(mean(MLE3[,1]),  sd(MLE3[,1]), mean(MLE3[,2]),  sd(MLE3[,2]) ) )

  colnames(Result3) <- c("Mean phi1" ,  "SE phi1", "Mean th1", "SE th1")
  Result3 

 







