#
#    USe try() and tryCatch() to loop going despite the error
#    4/15/2011
#
#===========================================================

x <- rnorm(100, 2, 1)
x
which(x<0)


log(x)
log("a")


#--- Define nonsensical function that gives error for neg x ---------
log.a <- function(x){
  ifelse(x<0, a <- log("a"), a<- log(x))
  return(a)
}


#--- This loop stops at where x is negetive value, because of log.a function.
T <- 0
for (i in 1:100) {
  print(i)
  T[i] <- log.a(x[i])
}


#--- You can Use try() to keep the loop going ------------------------
T <- 0
for (i in 1:100) {
  print(i)
  T[i] <- try( log.a(x[i]), TRUE )  #TRUE supresses the error message
  #T[i] <- try( log.a(x[i]), FALSE )
}
T             #loop goes on despite of the error
mean(T)       #Even though loop finishes, we still can't do this because of error message



#--- Use tryCatch() to get better output for error case -------------------------------
T <- 0
for (i in 1:100) {
  print(i)
  T[i] <- tryCatch( log.a(x[i]), error=function(ss){return(NA)}  )   # put NA if error is given
}
T
mean(T)                           #Loop finishes, and still can't do this b/c of NA, but....
mean(  T[which(is.na(T)==0)]  )   #now we can do this





#--- While loop using tryCatch()  -------------------------------
n   = 100
itt = 50
MLE  = matrix(0, itt, 9)  
Vars = matrix(0, itt, 9)  

i=1
j=1
while (i <= itt) {
  X  <- arima.sim(n=n, 
                  list(ar = c(1.5051,  -0.7517,  -0.4294,  0.4672), 
                       ma = c(-2.6066,  2.8921,  -1.6503,  0.4296)  ) ) + 8
  Est <- tryCatch(
    Arima(X, order=c(4,0,4)),
    error = function(ss){return(NA)}  
  )  
  if ( length(is.na(Est))>1) {
    MLE[i,]  <- Est$coef
    Vars[i,] <- diag(Est$var.coef)
    i=i+1
  } else {
    j=j+1
  }
}

Result <- cbind( apply(MLE, 2, mean),
                 apply(MLE, 2, sd),
                 sqrt(apply(Vars, 2, mean)))
colnames(Result) <- c("Mean",  "SE by Sim",  "SE from Output")
Result


