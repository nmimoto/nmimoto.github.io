###
###
###  Boston data (MASS) - Regularization: LASSO and Ridge Regression
###                         Training vs Testing only
###   ver 0.0.4
###
#################################################################


###-------------------------------------------------
###--- 0. Preliminary

# Using Boston3 from https://nmimoto.github.io/R/boston0.txt
library(MASS)                # install.packages("MASS")
library(tidyverse)           # install.packages("tidyverse")
Boston <- as_tibble(Boston)
Boston

# Rename "medv" column as "resp" to streamline analysis.
Boston2 <- Boston %>% rename(resp=medv)
Boston2

# move "resp" columnm to 1st
Boston2 <- Boston2 %>% relocate(resp)
Boston2

# turn "chas" column into 0/1 factor
Boston3 <- Boston2 %>% mutate( chas=as.factor(chas) )
Boston3

# Importance List by Chisq test

  # top list:
  # 3  4  6 10
  # "zn" "indus" "nox"   "rad"

  # bottom list
  # c(7, 8, 9, 13)
  # "rm"    "age"   "dis"   "black"

  #1  resp    (dbl)   <- used to be "medv". Response variable (Y).
  #2  crim    (dbl)
  #3  zn      (dbl)
  #4  indus   (dbl)
  #5  chas    (factor)
  #6  nox     (dbl)
  #7  rm      (dbl)
  #8  age     (dbl)
  #9  dis     (dbl)
  #10 rad     (int)
  #11 tax     (dbl)
  #12 ptratio (dbl)
  #13 black   (dbl)
  #14 lstat   (dbl)


###
###  For Regularlization Method, Data should be standardized.
###




###-------------------------------------------------
###--- 1. Data Separation (Copied from Rtut-CV)
### Divide Dataset to Training and Testing and Set up k fold CV
Orig <- Boston3              # Entire Data set (have to be data.frame)
train.size <- 400            # num of rows for training set
test.size <- 106             # num of rows for testing set
my.seed <- 4345              # give a seed

  ###
  ### This line replaces the AAAA to BBBB chunk
  source('https://nmimoto.github.io/R/ML-00.txt')
  ###

# Output (all data.frame):
#   Train.set      /  Train.resp
#   Test.set       /  Test.resp
#   CV.train[[k]]  /  CV.train.resp[[k]]
#   CV.valid[[k]]  /  CV.valid.resp[[k]]

# [ Train.set 400     ]     [Test.set 106]
# [80][80][80][80][80]


#--- plot Training and Test for visualization
fold = 2
plot(CV.train[[fold]]$lstat,  CV.train[[fold]]$resp, xlab="lstat", ylab="Response (medv)")
lines(CV.valid[[fold]]$lstat, CV.valid[[fold]]$resp, type="p", col="red",pch=19)




###-------------------------------------------------
###--- 3. Ordinary Regression (w Entire Training set)
Fit01 = lm(resp ~. , data=Train.set)
summary(Fit01)

# predict values resp in Test set
pred = predict(Fit01, newdata = Test.set)

library(caret)          # install.packages("caret")
OLS <- data.frame(
  RMSE = caret::RMSE(pred,  Test.set$resp),
  Rsquare = caret::R2(pred, Test.resp$resp)
)
OLS




###-------------------------------------------------
###--- 4. Lasso Regression (Entire Training set. Auto 5-fold CV)
library(glmnet)         # install.packages('glmnet', repos='https://cran.case.edu/')

# Display the best lambda value
x <- model.matrix(resp ~. , Train.set)[,-1]
y <- Train.set$resp
set.seed(my.seed)

CV.for.lambda <- cv.glmnet(x, y, alpha = 1, nfolds=5)
CV.for.lambda$lambda.min
FitLasso <- glmnet(x, y, alpha = 1, lambda = CV.for.lambda$lambda.min)
coef(FitLasso)

x.test <- model.matrix(resp ~., Test.set)[,-1]
pred <- as.vector(predict(FitLasso, x.test))

# Model performance metrics
LASSO <- data.frame(
  RMSE    = caret::RMSE(pred,  Test.set$resp),
  Rsquare = caret::R2(pred, Test.resp$resp)
)
LASSO





###-------------------------------------------------
###--- 5. Ridge Regression (Entire Training set. Auto 5-fold CV)

# Display the best lambda value
x <- model.matrix(resp ~. , Train.set)[,-1]
y <- Train.set$resp
set.seed(my.seed)

CV.for.lambda <- cv.glmnet(x, y, alpha = 0, nfolds=5)
CV.for.lambda$lambda.min
FitRidge <- glmnet(x, y, alpha = 0, lambda = CV.for.lambda$lambda.min)
coef(FitRidge)

x.test <- model.matrix(resp ~., Test.set)[,-1]
pred <- as.vector(predict(FitRidge, x.test))

# Model performance metrics
RIDGE <- data.frame(
  RMSE    = caret::RMSE(pred, as.matrix(Test.resp)),
  Rsquare = caret::R2(pred, Test.resp)
)
RIDGE


OLS
LASSO
RIDGE
